from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
import requests
from bs4 import BeautifulSoup
from sumy.parsers.html import HtmlParser
from sumy.nlp.tokenizers import Tokenizer
from sumy.summarizers.lsa import LsaSummarizer

app = FastAPI()

class URLInput(BaseModel):
    url: str

@app.post("/summarize/")
def summarize_blog(data: URLInput):
    try:
        response = requests.get(data.url)
        if response.status_code != 200:
            raise HTTPException(status_code=400, detail="Failed to fetch the webpage")
        
        # Extract text from webpage
        soup = BeautifulSoup(response.text, "html.parser")
        paragraphs = soup.find_all("p")
        text = " ".join([p.get_text() for p in paragraphs])
        
        if not text:
            raise HTTPException(status_code=400, detail="No readable content found on the page")
        
        # Summarize the text using Sumy
        parser = HtmlParser.from_string(text, data.url, Tokenizer("english"))
        summarizer = LsaSummarizer()
        summary = summarizer(parser.document, 5)  # Generate 5-sentence summary
        
        summarized_text = " ".join([str(sentence) for sentence in summary])
        return {"summary": summarized_text}
    
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

# Run locally: uvicorn blog_summarizer:app --reload
